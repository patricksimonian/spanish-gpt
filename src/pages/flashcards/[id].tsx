import { readFileSync, readdirSync } from "fs";
import React, { useEffect, useState } from 'react';
import { type NextPage } from "next";
import yaml from 'yaml';
import Head from "next/head";
import { useRouter } from "next/router";
import FlashcardGrid from "../../components/FlashcardGrid";
import Link from "next/link";



function Flashcard() {
  const [flashcardData, setFlashcardData] = useState({ name: "", spec: { data: []}});
  const [ fetched, setFetched] = useState(false)
  const router = useRouter()
  const { id } = router.query
  useEffect(() => {
    const getAndSetFlashCardData = async () => {
        const res = await fetch(`/api/languages/${id}`)
        if(res.status === 200) {
            const d =  await res.json()
            setFlashcardData(d.data)
        }
    }
    if(!fetched) {

        getAndSetFlashCardData()
        setFetched(true)
    }
  }, [flashcardData])
  return (
    <>
      <Head>
        <title>{flashcardData.name}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <h1 className="text-5xl center mb-10">{flashcardData.name}</h1>
        <Link className="text-5xl text-white" href="/">Back</Link>
        <FlashcardGrid cards={flashcardData.spec.data} />
      </main>
    </>
  );
}

export async function getServerSideProps( {req}) {

  return { props: {  } };
}
export default Flashcard;
